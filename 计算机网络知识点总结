#计算机网络知识点总结#
## 1. 什么是网络协议？
计算机网络中数据交换遵循事先约定好的规则，这个规则称为协议。
协议的三要素：语义，语法，时序（交换规则）。

## 2. 数据交换的分类？
数据交换主要分为：电路交换，报文交换，分组交换

* 电路交换特点：
数据传输之前需要建立连接
预留通信所需要的资源
利用频分多路复用(FDM)与时分多路复用(TDM)进行链路共享
数据按序传输到达
优点是可以为一个通话保证一定数量的带宽，当预留的带宽都被使用时，利用率高且稳定
缺点是当预留的资源没有被使用时，资源利用率较低

* 报文交换：将源发送的信息作为一个整体进行传输

* 分组交换的特点：
将报文拆分成一系列的数据包进行传输
不需要预留资源，不需要提前建立连接，只要链路空闲即可传输
采用存储转发进行数据传输，延迟不可估计
数据不一定按需到达
优点是利用率高
缺点是可能产生延迟，丢包等，需要控制协议进行可靠数据传输

## 3. 分组交换的时延？
* 节点处理时延：检查分组头部，路由选择，差错检验等处理时间
* 排队时延：分组交换采用存储转发的模式，当分组到达节点时，在它之前有其他分组正在传输，那它得先缓存排队等待
* 传输时延：将分组的所有比特推向链路花费的时间，L为分组长度，R为传输速率，则传输时延为L/R
* 传播时延：分组被推向链路之后，在链路上传播的时间，传播速度约等于光速

## 4. 丢包的原因？
丢包是指分组到达某一节点，但是节点的排队缓存队列已经满了，无法存储这个分组，所以将他丢弃。

产生丢包的原因不止这一个，还有比如：
如果传输过来的节点发生错误，将它丢弃
如果节点在网络中的传输时间超过了它的寿命(TTL)，将它丢弃

## 5. 协议的层次与模型？
* OSI七层模型
**应用层**：允许访问OSI环境的手段。HTTP, FTP, DNS, SMTP, Telnet
**表示层**：对数据进行翻译，加密和压缩。JPEG, MPEG, ASII
**会话层**：建立，管理和终止回话。NFS, SQL, RPC
**传输层**：提供不同端系统的进程间通信。TCP, UDP, SPX
**网络层**：提供主机之间的通信。IP, ICMP, ARP, RAPR, RIP, OSPF, BGP-4 (路由器)
**数据链路层**：提供网络中点到点之间数据帧的传递。PPP, FR, HDLC, VLAN, MAC (网桥，交换机)
**物理层**：提供在物理介质上每一比特的传输。RJ45, CLOCK, IEEE802.3 (中继器，集线器，网关)

* Internet五层模型
**应用层**：将应用程序的报文交给传输层
**传输层**：将接收的报文分段，封装TCP/UDP头部信息，将报文段传递给网络层
**网络层**：将接收的报文段封装IP头部信息，将数据报交给数据链路层
**数据链路层**：将接收网络层的数据报，封装数据帧头部信息，将数据帧从一个节点通过链路传到另一个节点
**物理层**：数据链路层负责将一个个数据帧从一点传递到另一点，物理层负责一个个比特从一点传递到另一点

## 6. 网络应用程序体系结构
* 客户端/服务器体系结构（client-server architecture）比如Web，DNS等
**客户端**：
与服务器通信，使用服务器提供的网络
间歇性的接入网络
可能使用动态IP地址
不会与其他客户端直接通信
一般主动发起通信的为客户端
**服务器**
7*24小时提供无间歇服务
永久访问的地址，域名
利用大量服务器实现可扩展性
一般被动接收通信的为服务器

* P2P体系结构（peer-to-peer architecture）比如因特网电话Skype
没有永远在线的服务器
任意端系统与节点之间可以任意通信
节点间歇性接入网络，可动态改变IP地址
高度可伸缩性

* 混合结构（Hybrid architecture）比如Mp3文件下载软件Napster
文件传输使用P2P结构
文件搜索使用C/S结构，集中式搜索
每个节点向中间服务器等级自己的内容，服务器建立目录索引
每个节点向中间服务器查询自己感兴趣的内容

## 7. 概述Web与HTTP协议？
HTTP又名超文本传输协议（HyperText Transfer Protocol）
采用C/S客户端服务器体系结构
采用TCP传输层服务
HTTP是无状态协议，不保存维护与客户相关的任何信息
HTTP分为非持续连接（一次连接只能传递一个对象）和持续连接（一次能够传递多个对象）

**HTTP响应报文常见状态码**
２００　OK：请求成功，信息在返回的响应报文中
３０１　Moved Permanently：自动重定向，请求对象已被永久转移，返回新URL，客户软件自动获取新URL
４００　Bad Request：差错请求报文
４０４　Not Found：被请求的文档不在服务器上
５０５　HTTP Version Not Supported：HTTP协议版本不支持

**用户与服务器的交互**
由于HTTP是无状态的，这简化了服务器的设计，但是很多场合需要保存一些用户的状态
可以运用cookie和session

**Web缓存代理服务器**
Web缓存代理服务器会缓存最近常访问的对象副本
用户发起HTTP请求时，先请求代理服务器，若有，则在与服务器确认对象是最新的之后，直接返回带有对象的HTTP响应报文给用户
使用Web缓存服务器的原因：
1. 可减少客户的响应时间
2. 可减少一个机构的介入链路到因特网的通信量

## 8. 概述FTP协议？
与HTTP一样，FTP也是文件传输协议
与HTTP不同的是，FTP采用两个并行的TCP连接来传输文件
一个是控制连接，贯穿整个会话期间
一个是数据连接，每一次传输数据都需要建立一个新的数据连接，传输完成后关闭

## 9. 概述SMTP协议？
SMTP是电子邮件协议
SMTP由于历史问题，限制所有邮件报文体形式只能采用简单的７比特的ASCII码
SMTP一般不使用中间邮件服务器，即两个邮件服务器之间之间相连
**A发送邮件到B**
A的代理使用SMTP协议将邮件发到A的邮件服务器，A的邮件服务器使用SMTP协议将邮件发送到B的邮件服务器，最后B代理通过POP3, IMAP, HTTP等邮件访问协议将邮件从B的邮件服务器“拉”回来。
注意，前两步的SMTP协议是“推”协议，第三部的邮件访问协议是“拉”协议

**SMTP与HTTP的对比**
相同点：
都是文件传输，都是使用TCP传输服务
不同点：
SMTP是“推”协议，HTTP是“拉”协议
SMTP只能使用７比特的ASCII码，HTTP没有这种限制
如何处理既包含文本又包含图形的文档，HTTP把每个对象封装到HTTP响应报文中，SMTP则把所有报文对象放在一个报文中

## 10. 概述DNS协议？
**DNS**又称为域名系统
主要服务是提供域名到IP地址的转换
DNS使用UDP传输层协议，端口号53
DNS一般不直接为用户使用，一般为应用程序提供支持
DNS域名系统使用层次式的，分布式的服务器层次结构
主要有：
**根DNS服务器**：分布在全球各地，数量较少
**顶级DNS服务器**：比如com, net等顶级域名或cn, hk等国家域名
**权威DNS服务器**：每个在互联网具有公共可访问主机的机构都必须提供公共可访问DNS记录，DNS将这些主机映射为IP地址，比如google, baidu等
**本地DNS服务器**：本地DNS可缓存常用或最近查询过的域名信息

## 11. 常用应用程序协议服务与端口号？
FTP / TCP  --- 21
SSH / TCP --- 22
TELNET / TCP --- 23
SMTP / TCP --- 25
DNS / UDP --- 53
HTTP / TCP --- 80
POP3 / TCP --- 109
HTTPS / TCP --- 443

## 12. 概述传输层的服务？

## 13. 传输层的多路复用与多路分解？

## 14. 概述UDP协议？

## 15. 传输层的可靠数据传输原理？

## 16. 概述TCP协议？

## 17. TCP连接建立的三次握手？
## 18. TCP连接拆除的四次挥手？

## 19. TCP连接状态图？

## 20. 概述网络层的服务？
网络层提供的基本服务主要有：
**转发**：将到来的分组从合适的接口转发出去，属于路由器的本地动作
**路由选择**：为从源到目的地的分组选择合适的路径，属于整个网络层的功能

网络层主要提供两种模式：虚电路网络（ATM）与数据报网络（Internet）

## 21. 概述IP协议？

私有网络地址：
A类：10.0.0.0 -- 10.255.255.255
B类：172.16.0.0 -- 172.31.255.255
C类：192.168.0.0 -- 192.168.255.255

## 22. 概述DHCP协议？ 
**DHCP**协议又称为动态主机配置协议，DHCP允许主机自动获取IP地址
DHCP是一种客户端-服务器协议，在应用层实现，采用UDP
**主机获取IP地址步骤**：
1. 主机广播DHCP发现报文
2. DHCP服务器回应ACK，并携带分配给它的IP地址，表示提供服务
3. 主机广播DHCP请求，表示我打算连接到你分配的IP地址，同时也相当于告诉其他DHCP服务器，我已经打算连接到这个DHCP服务器的IP地址了，你们分配的IP地址可收回了
4. DHCP服务器最后回复ACK报文

## 23. 概述NAT协议？
**NAT**又称为网络地址转换，为本地私有网络提供合法IP地址，连接到外部网络
NAT不仅能解决IP地址不足的问题，而且能有效避免被攻击，隐藏和保护内部计算机
NAT的转换方式主要有三种：
**静态转换**：将私有网络的某IP地址转换成特定的合法IP地址，一对一静态转换
**动态转换**：将私有网络的IP地址转换成合法IP地址时，是不确定的，可以随机转换成任意指定的合法IP地址
**端口多路复用**：将私有网络的IP地址转换成合法IP地址时，所有私有网络主机共享一个合法IP地址，每个主机转换为端口号，进行外部网络的访问。

## 24.概述ICMP协议？

ICMP协议又称为互联网控制报文协议，属于IP协议的一部分
ICMP协议的主要服务是为网络层提供差错信息及其他信息
ICMP报文是被封装到IP数据报中进行传输的
两类ICMP报文：
差错控制报文：目的不可达，源抑制，超时超期，参数问题，重定向等
网络探寻报文：回声请求与应答报文，时间戳请求与应答报文

**运用ICMP的应用**
tracerooute：运用超时超期（TTL超时）和目的端口不可达的ICMP差错报文
ping：利用回显请求与应答报文

## 25. 概述路由算法？
* **链路状态路由算法（LS）**
全局式的路由选择算法
每个节点有本网络所有的网络拓扑以及链路费用的全局信息
运用迪杰斯特拉（Dijkstra）算法计算最短路由选择
**特点**
向网络上所有其他节点广播消息
消息仅包括到邻居节点的费用
收敛速度较快
存在震荡现象（当费用与通信量相关时）

* **距离向量路由算法（DV）**
分布式的路由算则算法
每个节点仅保存通往目的地的最短路径的下一跳，通过迭代的方式计算出路径选择
每个节点从直接相连的邻居处获取信息，然后计算，若有变化，则将计算结果分发给直接相连的邻居
每个节点直接检测到链路费用，更新路由信息，若变化，发送给所有直接的邻居
**特点**
分布式，迭代，异步的路由算法
仅向直接相连的邻居交换信息
每个节点仅保存通往目的地最短路径的下一跳
收敛速度慢
好消息传播快，坏消息传播慢
存在无穷计数的问题，解决办法为毒性逆转，（如果A通往目的地的最短路径的下一跳是B，则当B询问B通过A去目的地的最短路径时，A回复无穷大）

* **层次路由选择**
将一个大规模网络分为多个自治系统（AS），每个自治系统内运行相同的路由算法，称为自治系统内部路由选择协议（如RIP，OSPF）
两个自治系统AS之间的通信运行自治系统间路由选择协议（如BGP）

* **RIP**
路由选择信息协议（Routing Information Protocol）
基于距离向量路由算法（DV），定义跳数为其链路费用
RIP被当做一个应用进程来实现，交换信息使用UDP
RIP通常被用于小规模网络，下层ISP及公司网络

* **OSPF**
开放最短路优先协议（Open Shortest Path First）
基于链路状态路由算法（LS）
当一条链路费用变化时，节点向网络中所有节点广播路由选择信息
每个节点使用Dijkstra算法计算最低费用路径选择
OSPF更复杂，也有很多**优点**：
安全
可以有多条相同费用路径，当需要传递大量分组时，有多个选择，充分利用
支持单播和多播路由
OSPF支持在AS内部进一步分层

* **BGP**
边界网关协议（Border Gateway Protocol）,自治系统间的路由选择协议
eBGP，从邻居子网获取可达信息
iBGP，向本子网内节点传递子网可达信息
基于可达信息的路径，确定到达外部子网的好的路径

---
## 27. 概述数据链路层的服务？
基本服务：将网络层的数据报封装成数据帧，通过单一通信链路从一个节点传输到另一个节点
链路层的主体是在**网络适配器**上实现的
链路层信道主要分为两类，点对点链路（PPP），和广播链路

## 28. 概述MAC协议？
MAC协议称为多路访问控制协议
主要能分为三类：**信道划分协议**，**随机接入协议**，**轮流协议**

* **信道划分协议**
主要分为时分多路复用（TDM），频分多路复用（FDM），码分多址（CDMA）
相当于是为每一个可能使用的人预留了一段资源，每个人在自己分配的那段资源里传输数据，所以一定不会发生碰撞
当某时刻用的人很多时，利用率高
当某时刻用的人很少时，利用率低
* **随机接入协议**
基本思想是：当用户有数据需要发送时，就直接发送，如果与其他人发生碰撞了，就等一个随机时延，再重新发送，直到没有碰撞发生，发送成功为止
主要有**时隙ALOHA**，**ALOHA**，**CSMA**，**CSMA/CD**协议
**时隙ALOHA**将时间划分若干时隙，规定所有人只能在某一个时隙的起始点发送数据
**ALOHA**则没有这个规定，所有人可以在任何时间发送数据
时隙ALOHA的效率比ALOHA协议的效率要高一倍左右
**CSMA**协议称为载波侦听多路访问，即发送数据之前先侦听信道，当没有人发送数据时，才发送数据
**CSMA/CD**协议称为带碰撞检测的载波侦听多路访问协议，在CSMA基础上加了碰撞检测，若检测到碰撞，则都立即停止发送，等一个随机时间后再次发送
既然所有人都侦听了，为什么还会发生碰撞呢？原因是存在传播延迟。
随机接入协议，当某时刻用的人少时，效率很高
用的人多时，发生碰撞概率高，效率较低

* **轮流协议**
按照一定的轮流规则，所有需要发送数据的人轮流发送数据，轮到谁就谁发。
主要有
**轮询协议**：主节点轮流通知每个节点，你可以发送数据了，如果你有数据，就发，没数据，就过
缺点：带来额外的轮询消耗；如果主节点发生故障，则后果严重
**令牌传递**：某种称为令牌的特殊帧在节点之间按特定次序传递，令牌传递到的节点才可以发送数据。
缺点：同样带来消耗，某一节点发生故障也可能给整个信道带来奔溃。

## 29. 概述MAC地址与ARP协议？
每一个网络设备的适配器都有自己的链路层地址，MAC地址，这个地址是子自生产出来就是唯一的。数据链路层需要通过MAC地址来转发数据帧来通过交换机网络

**ARP协议**称为地址解析协议，提供了IP地址转换为链路层MAC地址的机制
IP地址相当于邮政地址，MAC地址相当于身份证号

**ARP工作原理**：
每台主机或路由器都保存有一张ARP表，表中包含IP地址与MAC地址的映射关系
当表中有目的IP地址的信息时，就直接交给链路层进行发送
如果表中还没有相关信息，则在本子网内发送ARP广播查询，若此IP目的节点收到后应回复一个ARP应答报文
所以ARP是自适应的，自动建立的，即插即用的

## 30. 概述以太网？
以太网是目前有限局域网中具有统治地位的局域网类型
其多路访问控制协议采用CSMA/CD协议
现阶段总线型拓扑结构以太网已被星型拓扑结构所取代
星型拓扑结构中，集线器已被交换机所取代

## 30. 概述链路层交换机？
链路层交换机是数据链路层设备，其提供的主要服务为转发与过滤
链路层交换机所提供的服务是基于MAC地址的
交换机的转发与过滤借助于维护一个交换机表，表中有MAC地址与端口的对应关系
**转发**：指的是将具有目的MAC地址的数据帧从某个端口转发出去，若没有该表项，则广播该帧
**过滤**：如果MAC地址所对应的端口与数据帧进来的端口号相同，则丢弃

交换机是**自学习**的，即自动维护交换机表，即插即用
交换机缓存从每一个接口接收到的入帧的信息，若一定时间内没有再收到此地址的帧，则将该表项删除

## 31. 转发器，交换机，网桥，路由器，网关等？
**转发器**：物理层设备
**交换机**：数据链路层设备，基于MAC地址，提供数据帧的转发与过滤服务
**网桥**：数据链路层设备，提供将两个不同网段的网络连接起来的服务
**路由器**：网络层设备，基于IP地址，提供数据报的路由和转发服务
**网关**：网络层以上设备，提供一个网络与另一个网络连接的服务

**交换机与路由器的对比**

- 交换机是第二层（数据链路层）设备，路由器是第三层（网络层）设备
* 交换机基于MAC地址，路由器基于IP地址 
* 交换机是即插即用的，路由器不是，需要认为设置IP地址
* 交换机可能会产生广播风暴，路由器不会
* 交换机主要负责组建局域网，路由器主要负责将局域网连接起来，连入互联网
* 交换机求快，直接按目的MAC地址转发，路由器谋短，需要计算最小费用路径，然后转发
* 交换机主要用于规模较小的局域网，路由器主要用于规模较大的网络

## 32. 一个Web页面请求全过程？
**从键入www.google.com到浏览器显示网页经历了一系列的事件**

**1. 首先需要利用DNS域名服务知道google服务器的IP地址**：主机的操作系统生成一个DNS域名查询报文，采用UDP传输层协议，端口号53，网络层将此报文封装上IP头部信息，加上源IP地址与目的IP地址（即DNS服务器的IP地址），数据链路层将数据报封装成链路层数据帧，并将其转发到网关路由器（通过ARP协议，链路层转发），网关路由器抽取DNS数据报的IP地址，查询转发表，将其从某接口转发，最终到达DNS服务器，DNS服务器查询这个域名DNS源记录，并将包含google服务器的地址的DNS应答报文发送给主机，主机接收到后，提取出google服务器的IP地址

**2. 主机得先与google服务器建立TCP连接**：传输层得先创建TCP套接字，目的端口80，目的IP地址google服务器的地址，建立连接需要三次握手，主机发送SYN连接请求报文，google服务器收到后，分配缓存与变量，回复SYNACK报文，主机收到后，分配缓存与变量资源，回复ACK报文，并可以携带HTTP GET报文

**3. 主机发送HTTP GET报文**：主机应用层生成HTTP GET报文，传递给TCP传输层，TCP协议给HTTP GET报文封装TCP头部信息，并交给IP层，IP层封装IP头部信息称为数据报，再交给数据链路层封装成数据帧，通过ARP协议，进行链路层转发到网关路由器，网关路由器提取IP地址，查询转发表，再转发到某借口，最终到达google服务器，服务器提取出HTTP GET报文，生成一个HTTP响应报文，将所请求的WEB页面放入HTTP响应体中，并通过TCP连接将此报文发送回主机，主机收到后，提取出HTTP响应报文，从HTTP响应体中提取出HTML文件，最终显示出了WEB页面









