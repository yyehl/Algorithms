#计算机网络知识点总结#
## 1. 什么是网络协议？
计算机网络中数据交换遵循事先约定好的规则，这个规则称为协议。
协议的三要素：语义，语法，时序（交换规则）。

## 2. 数据交换的分类？
数据交换主要分为：电路交换，报文交换，分组交换

* 电路交换特点：
数据传输之前需要建立连接
预留通信所需要的资源
利用频分多路复用(FDM)与时分多路复用(TDM)进行链路共享
数据按序传输到达
优点是可以为一个通话保证一定数量的带宽，当预留的带宽都被使用时，利用率高且稳定
缺点是当预留的资源没有被使用时，资源利用率较低

* 报文交换：将源发送的信息作为一个整体进行传输

* 分组交换的特点：
将报文拆分成一系列的数据包进行传输
不需要预留资源，不需要提前建立连接，只要链路空闲即可传输
采用存储转发进行数据传输，延迟不可估计
数据不一定按需到达
优点是利用率高
缺点是可能产生延迟，丢包等，需要控制协议进行可靠数据传输

## 3. 分组交换的时延？
* 节点处理时延：检查分组头部，路由选择，差错检验等处理时间
* 排队时延：分组交换采用存储转发的模式，当分组到达节点时，在它之前有其他分组正在传输，那它得先缓存排队等待
* 传输时延：将分组的所有比特推向链路花费的时间，L为分组长度，R为传输速率，则传输时延为L/R
* 传播时延：分组被推向链路之后，在链路上传播的时间，传播速度约等于光速

## 4. 丢包的原因？
丢包是指分组到达某一节点，但是节点的排队缓存队列已经满了，无法存储这个分组，所以将他丢弃。

产生丢包的原因不止这一个，还有比如：
如果传输过来的节点发生错误，将它丢弃
如果节点在网络中的传输时间超过了它的寿命(TTL)，将它丢弃

## 5. 协议的层次与模型？
* OSI七层模型
**应用层**：允许访问OSI环境的手段。HTTP, FTP, DNS, SMTP, Telnet
**表示层**：对数据进行翻译，加密和压缩。JPEG, MPEG, ASII
**会话层**：建立，管理和终止回话。NFS, SQL, RPC
**传输层**：提供不同端系统的进程间通信。TCP, UDP, SPX
**网络层**：提供主机之间的通信。IP, ICMP, ARP, RAPR, RIP, OSPF, BGP-4 (路由器)
**数据链路层**：提供网络中点到点之间数据帧的传递。PPP, FR, HDLC, VLAN, MAC (网桥，交换机)
**物理层**：提供在物理介质上每一比特的传输。RJ45, CLOCK, IEEE802.3 (中继器，集线器，网关)

* Internet五层模型
**应用层**：将应用程序的报文交给传输层
**传输层**：将接收的报文分段，封装TCP/UDP头部信息，将报文段传递给网络层
**网络层**：将接收的报文段封装IP头部信息，将数据报交给数据链路层
**数据链路层**：将接收网络层的数据报，封装数据帧头部信息，将数据帧从一个节点通过链路传到另一个节点
**物理层**：数据链路层负责将一个个数据帧从一点传递到另一点，物理层负责一个个比特从一点传递到另一点

## 6. 网络应用程序体系结构
* 客户端/服务器体系结构（client-server architecture）比如Web，DNS等
**客户端**：
与服务器通信，使用服务器提供的网络
间歇性的接入网络
可能使用动态IP地址
不会与其他客户端直接通信
一般主动发起通信的为客户端
**服务器**
7*24小时提供无间歇服务
永久访问的地址，域名
利用大量服务器实现可扩展性
一般被动接收通信的为服务器

* P2P体系结构（peer-to-peer architecture）比如因特网电话Skype
没有永远在线的服务器
任意端系统与节点之间可以任意通信
节点间歇性接入网络，可动态改变IP地址
高度可伸缩性

* 混合结构（Hybrid architecture）比如Mp3文件下载软件Napster
文件传输使用P2P结构
文件搜索使用C/S结构，集中式搜索
每个节点向中间服务器等级自己的内容，服务器建立目录索引
每个节点向中间服务器查询自己感兴趣的内容

## 7. 概述Web与HTTP协议？
HTTP又名超文本传输协议（HyperText Transfer Protocol）
采用C/S客户端服务器体系结构
采用TCP传输层服务
HTTP是无状态协议，不保存维护与客户相关的任何信息
HTTP分为非持续连接（一次连接只能传递一个对象）和持续连接（一次能够传递多个对象）

**HTTP响应报文常见状态码**
２００　OK：请求成功，信息在返回的响应报文中
３０１　Moved Permanently：自动重定向，请求对象已被永久转移，返回新URL，客户软件自动获取新URL
４００　Bad Request：差错请求报文
４０４　Not Found：被请求的文档不在服务器上
５０５　HTTP Version Not Supported：HTTP协议版本不支持

**用户与服务器的交互**
由于HTTP是无状态的，这简化了服务器的设计，但是很多场合需要保存一些用户的状态
可以运用cookie和session

**Web缓存代理服务器**
Web缓存代理服务器会缓存最近常访问的对象副本
用户发起HTTP请求时，先请求代理服务器，若有，则在与服务器确认对象是最新的之后，直接返回带有对象的HTTP响应报文给用户
使用Web缓存服务器的原因：
1. 可减少客户的响应时间
2. 可减少一个机构的介入链路到因特网的通信量

## 8. 概述FTP协议？
与HTTP一样，FTP也是文件传输协议
与HTTP不同的是，FTP采用两个并行的TCP连接来传输文件
一个是控制连接，贯穿整个会话期间
一个是数据连接，每一次传输数据都需要建立一个新的数据连接，传输完成后关闭

## 9. 概述SMTP协议？
SMTP是电子邮件协议
SMTP由于历史问题，限制所有邮件报文体形式只能采用简单的７比特的ASCII码
SMTP一般不使用中间邮件服务器，即两个邮件服务器之间之间相连
**A发送邮件到B**
A的代理使用SMTP协议将邮件发到A的邮件服务器，A的邮件服务器使用SMTP协议将邮件发送到B的邮件服务器，最后B代理通过POP3, IMAP, HTTP等邮件访问协议将邮件从B的邮件服务器“拉”回来。
注意，前两步的SMTP协议是“推”协议，第三部的邮件访问协议是“拉”协议

**SMTP与HTTP的对比**
相同
点：都是文件传输，都是使用TCP传输服务
不同点：
SMTP是“推”协议，HTTP是“拉”协议
SMTP只能使用７比特的ASCII码，HTTP没有这种限制
如何处理既包含文本又包含图形的文档，HTTP把每个对象封装到HTTP响应报文中，SMTP则把所有报文对象放在一个报文中

## 10. 概述DNS协议？

## 11. 常用应用程序协议服务与端口号？

## 12. 概述传输层的服务？

## 13. 传输层的多路复用与多路分解？

## 14. 概述UDP协议？

## 15. 传输层的可靠数据传输原理？

## 16. 概述TCP协议？

## 17. TCP连接建立的三次握手？
## 18. TCP连接拆除的四次挥手？

## 19. TCP连接状态图？

## 20. 概述网络层的服务？

## 21. 概述IP协议？

## 22. 概述DHCP协议？ 
## 23. 概述NAT协议？
## 24.概述ICMP协议？
## 25. 概述路由算法？

## 27. 概述数据链路层的服务？
## 28. 概述MAC协议？
## 29. 概述MAC地址与ARP协议？
## 30. 概述CSMA/CD协议？
## 30. 概述链路层交换机？
## 31. 转发器，交换机，网桥，路由器，网关等？
## 32. 一个Web页面请求全过程？







